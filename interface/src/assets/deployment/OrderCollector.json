{
  "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract BatchCounter",
          "name": "_batchCounter",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "players",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "orderLimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "batchIndex",
          "type": "uint256"
        }
      ],
      "name": "OrderLimitExceededError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentBatchIndex",
          "type": "uint256"
        }
      ],
      "name": "WrongBatchIndexError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "batchIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedOrder",
          "type": "bytes"
        }
      ],
      "name": "EncryptedOrderSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "batchCounter",
      "outputs": [
        {
          "internalType": "contract BatchCounter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "orderLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "encryptedOrder",
          "type": "bytes"
        }
      ],
      "name": "submitEncryptedOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x853524979e2fe261d39f18f636e40b15039f90bf8fde68e1faca6857e86e1d90",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
    "transactionIndex": 0,
    "gasUsed": "790703",
    "logsBloom": "0x
    "blockHash": "0x4dd42fd004d227cfd81771bb540b05b39f562d65be367aa31edaed315af0ccbe",
    "transactionHash": "0x853524979e2fe261d39f18f636e40b15039f90bf8fde68e1faca6857e86e1d90",
    "logs": [],
    "blockNumber": 28,
    "cumulativeGasUsed": "790703",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
    [
      "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC",
      "0x90F79bf6EB2c4f870365E785982E1f101E93b906",
      "0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65",
      "0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc",
      "0x976EA74026E726554dB657fA54763abd0C3a0aa9",
      "0x14dC79964da2C08b23698B3D3cc7Ca32193d9955",
      "0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f"
    ],
    "100"
  ],
  "numDeployments": 1,
  "solcInputHash": "33a5bfdc605492d0d2a4daf89defbd56",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract BatchCounter\",\"name\":\"_batchCounter\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"orderLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"}],\"name\":\"OrderLimitExceededError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBatchIndex\",\"type\":\"uint256\"}],\"name\":\"WrongBatchIndexError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedOrder\",\"type\":\"bytes\"}],\"name\":\"EncryptedOrderSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"batchCounter\",\"outputs\":[{\"internalType\":\"contract BatchCounter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"orderLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encryptedOrder\",\"type\":\"bytes\"}],\"name\":\"submitEncryptedOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderCollector.sol\":\"OrderCollector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BatchCounter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.9;\\n\\ncontract BatchCounter {\\n    error StartBlockNotReachedError(\\n        uint256 startBlockNumber,\\n        uint256 currentBlockNumber\\n    );\\n\\n    uint256 public startBlockNumber;\\n    uint256 public batchLength;\\n\\n    constructor(uint256 _startBlockNumber, uint256 _batchLength) {\\n        startBlockNumber = _startBlockNumber;\\n        batchLength = _batchLength;\\n    }\\n\\n    function hasStartedAtBlock(uint256 blockNumber) public view returns (bool) {\\n        return blockNumber >= startBlockNumber;\\n    }\\n\\n    function batchStartBlock(uint256 batchIndex) public view returns (uint256) {\\n        return startBlockNumber + batchIndex * batchLength;\\n    }\\n\\n    function batchIndexForBlock(uint256 blockNumber)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        if (blockNumber < startBlockNumber) {\\n            revert StartBlockNotReachedError(startBlockNumber, blockNumber);\\n        }\\n        return (blockNumber - startBlockNumber) / batchLength;\\n    }\\n\\n    function hasStarted() external view returns (bool) {\\n        return hasStartedAtBlock(block.number);\\n    }\\n\\n    function currentBatchIndex() external view returns (uint256) {\\n        return batchIndexForBlock(block.number);\\n    }\\n\\n    function currentBatchStartBlock() external view returns (uint256) {\\n        return batchStartBlock(block.number);\\n    }\\n}\\n\",\"keccak256\":\"0x8789e365bd4f81a25da304f82cc47f6ecd883504d581a6ec125cefb4591008de\",\"license\":\"MIT\"},\"contracts/OrderCollector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.9;\\n\\nimport {BatchCounter} from \\\"./BatchCounter.sol\\\";\\n\\ncontract OrderCollector {\\n    error OrderLimitExceededError(address sender, uint256 batchIndex);\\n    error WrongBatchIndexError(uint256 batchIndex, uint256 currentBatchIndex);\\n\\n    event EncryptedOrderSubmitted(\\n        uint256 batchIndex,\\n        address sender,\\n        bytes encryptedOrder\\n    );\\n\\n    BatchCounter public batchCounter;\\n    mapping(address => uint256) public orderLimits; // sender => max num txs\\n    mapping(uint256 => mapping(address => uint256)) public numOrders; // batch index => sender => num txs\\n\\n    constructor(\\n        BatchCounter _batchCounter,\\n        address[] memory players,\\n        uint256 orderLimit\\n    ) {\\n        batchCounter = _batchCounter;\\n\\n        // number of players is small, so iterating is fine\\n        for (uint256 i = 0; i < players.length; i++) {\\n            orderLimits[players[i]] = orderLimit;\\n        }\\n    }\\n\\n    function submitEncryptedOrder(\\n        uint256 batchIndex,\\n        bytes memory encryptedOrder\\n    ) external {\\n        if (batchIndex != batchCounter.currentBatchIndex()) {\\n            revert WrongBatchIndexError(\\n                batchIndex,\\n                batchCounter.currentBatchIndex()\\n            );\\n        }\\n        if (numOrders[batchIndex][msg.sender] >= orderLimits[msg.sender]) {\\n            revert OrderLimitExceededError(msg.sender, batchIndex);\\n        }\\n        numOrders[batchIndex][msg.sender]++;\\n\\n        emit EncryptedOrderSubmitted({\\n            batchIndex: batchIndex,\\n            sender: msg.sender,\\n            encryptedOrder: encryptedOrder\\n        });\\n    }\\n}\\n\",\"keccak256\":\"0xacd9594035cd8a22e3ae0cfa0cb47071024902107e7afda4bcb7c22f53ebddaa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000e6238038062000e62833981810160405281019062000037919062000373565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b8251811015620000fb5781600160008584815181106200009f576200009e620003ee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080620000f2906200044c565b9150506200007a565b505050506200049a565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001468262000119565b9050919050565b60006200015a8262000139565b9050919050565b6200016c816200014d565b81146200017857600080fd5b50565b6000815190506200018c8162000161565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001e28262000197565b810181811067ffffffffffffffff82111715620002045762000203620001a8565b5b80604052505050565b60006200021962000105565b9050620002278282620001d7565b919050565b600067ffffffffffffffff8211156200024a5762000249620001a8565b5b602082029050602081019050919050565b600080fd5b6200026b8162000139565b81146200027757600080fd5b50565b6000815190506200028b8162000260565b92915050565b6000620002a8620002a2846200022c565b6200020d565b90508083825260208201905060208402830185811115620002ce57620002cd6200025b565b5b835b81811015620002fb5780620002e688826200027a565b845260208401935050602081019050620002d0565b5050509392505050565b600082601f8301126200031d576200031c62000192565b5b81516200032f84826020860162000291565b91505092915050565b6000819050919050565b6200034d8162000338565b81146200035957600080fd5b50565b6000815190506200036d8162000342565b92915050565b6000806000606084860312156200038f576200038e6200010f565b5b60006200039f868287016200017b565b935050602084015167ffffffffffffffff811115620003c357620003c262000114565b5b620003d18682870162000305565b9250506040620003e4868287016200035c565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620004598262000338565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200048f576200048e6200041d565b5b600182019050919050565b6109b880620004aa6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063278ff74d146100515780633f392d511461008157806368233eef1461009d578063f910ec27146100bb575b600080fd5b61006b600480360381019061006691906104ee565b6100eb565b604051610078919061053d565b60405180910390f35b61009b6004803603810190610096919061069e565b610110565b005b6100a561040a565b6040516100b29190610759565b60405180910390f35b6100d560048036038101906100d09190610774565b61042e565b6040516100e2919061053d565b60405180910390f35b6002602052816000526040600020602052806000526040600020600091509150505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636090b30e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017657600080fd5b505afa15801561018a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ae91906107b6565b8214610290578160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636090b30e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561021b57600080fd5b505afa15801561022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025391906107b6565b6040517f615b93290000000000000000000000000000000000000000000000000000000081526004016102879291906107e3565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546002600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103655733826040517f93b7b25a00000000000000000000000000000000000000000000000000000000815260040161035c92919061081b565b60405180910390fd5b6002600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906103c690610873565b91905055507fe23b9bd13050b6d980ee8b0e35b05b7e652ee87261d1848fed26f4c2bfb168d58233836040516103fe93929190610944565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61046d8161045a565b811461047857600080fd5b50565b60008135905061048a81610464565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104bb82610490565b9050919050565b6104cb816104b0565b81146104d657600080fd5b50565b6000813590506104e8816104c2565b92915050565b6000806040838503121561050557610504610450565b5b60006105138582860161047b565b9250506020610524858286016104d9565b9150509250929050565b6105378161045a565b82525050565b6000602082019050610552600083018461052e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105ab82610562565b810181811067ffffffffffffffff821117156105ca576105c9610573565b5b80604052505050565b60006105dd610446565b90506105e982826105a2565b919050565b600067ffffffffffffffff82111561060957610608610573565b5b61061282610562565b9050602081019050919050565b82818337600083830152505050565b600061064161063c846105ee565b6105d3565b90508281526020810184848401111561065d5761065c61055d565b5b61066884828561061f565b509392505050565b600082601f83011261068557610684610558565b5b813561069584826020860161062e565b91505092915050565b600080604083850312156106b5576106b4610450565b5b60006106c38582860161047b565b925050602083013567ffffffffffffffff8111156106e4576106e3610455565b5b6106f085828601610670565b9150509250929050565b6000819050919050565b600061071f61071a61071584610490565b6106fa565b610490565b9050919050565b600061073182610704565b9050919050565b600061074382610726565b9050919050565b61075381610738565b82525050565b600060208201905061076e600083018461074a565b92915050565b60006020828403121561078a57610789610450565b5b6000610798848285016104d9565b91505092915050565b6000815190506107b081610464565b92915050565b6000602082840312156107cc576107cb610450565b5b60006107da848285016107a1565b91505092915050565b60006040820190506107f8600083018561052e565b610805602083018461052e565b9392505050565b610815816104b0565b82525050565b6000604082019050610830600083018561080c565b61083d602083018461052e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061087e8261045a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108b1576108b0610844565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108f65780820151818401526020810190506108db565b83811115610905576000848401525b50505050565b6000610916826108bc565b61092081856108c7565b93506109308185602086016108d8565b61093981610562565b840191505092915050565b6000606082019050610959600083018661052e565b610966602083018561080c565b8181036040830152610978818461090b565b905094935050505056fea2646970667358221220fd28aed3f93ecf928e17ded6fdc2611cd63e3fb3bc54f5f97de77a3347e4835064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063278ff74d146100515780633f392d511461008157806368233eef1461009d578063f910ec27146100bb575b600080fd5b61006b600480360381019061006691906104ee565b6100eb565b604051610078919061053d565b60405180910390f35b61009b6004803603810190610096919061069e565b610110565b005b6100a561040a565b6040516100b29190610759565b60405180910390f35b6100d560048036038101906100d09190610774565b61042e565b6040516100e2919061053d565b60405180910390f35b6002602052816000526040600020602052806000526040600020600091509150505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636090b30e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017657600080fd5b505afa15801561018a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ae91906107b6565b8214610290578160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636090b30e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561021b57600080fd5b505afa15801561022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025391906107b6565b6040517f615b93290000000000000000000000000000000000000000000000000000000081526004016102879291906107e3565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546002600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103655733826040517f93b7b25a00000000000000000000000000000000000000000000000000000000815260040161035c92919061081b565b60405180910390fd5b6002600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906103c690610873565b91905055507fe23b9bd13050b6d980ee8b0e35b05b7e652ee87261d1848fed26f4c2bfb168d58233836040516103fe93929190610944565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61046d8161045a565b811461047857600080fd5b50565b60008135905061048a81610464565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104bb82610490565b9050919050565b6104cb816104b0565b81146104d657600080fd5b50565b6000813590506104e8816104c2565b92915050565b6000806040838503121561050557610504610450565b5b60006105138582860161047b565b9250506020610524858286016104d9565b9150509250929050565b6105378161045a565b82525050565b6000602082019050610552600083018461052e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105ab82610562565b810181811067ffffffffffffffff821117156105ca576105c9610573565b5b80604052505050565b60006105dd610446565b90506105e982826105a2565b919050565b600067ffffffffffffffff82111561060957610608610573565b5b61061282610562565b9050602081019050919050565b82818337600083830152505050565b600061064161063c846105ee565b6105d3565b90508281526020810184848401111561065d5761065c61055d565b5b61066884828561061f565b509392505050565b600082601f83011261068557610684610558565b5b813561069584826020860161062e565b91505092915050565b600080604083850312156106b5576106b4610450565b5b60006106c38582860161047b565b925050602083013567ffffffffffffffff8111156106e4576106e3610455565b5b6106f085828601610670565b9150509250929050565b6000819050919050565b600061071f61071a61071584610490565b6106fa565b610490565b9050919050565b600061073182610704565b9050919050565b600061074382610726565b9050919050565b61075381610738565b82525050565b600060208201905061076e600083018461074a565b92915050565b60006020828403121561078a57610789610450565b5b6000610798848285016104d9565b91505092915050565b6000815190506107b081610464565b92915050565b6000602082840312156107cc576107cb610450565b5b60006107da848285016107a1565b91505092915050565b60006040820190506107f8600083018561052e565b610805602083018461052e565b9392505050565b610815816104b0565b82525050565b6000604082019050610830600083018561080c565b61083d602083018461052e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061087e8261045a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108b1576108b0610844565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108f65780820151818401526020810190506108db565b83811115610905576000848401525b50505050565b6000610916826108bc565b61092081856108c7565b93506109308185602086016108d8565b61093981610562565b840191505092915050565b6000606082019050610959600083018661052e565b610966602083018561080c565b8181036040830152610978818461090b565b905094935050505056fea2646970667358221220fd28aed3f93ecf928e17ded6fdc2611cd63e3fb3bc54f5f97de77a3347e4835064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 139,
        "contract": "contracts/OrderCollector.sol:OrderCollector",
        "label": "batchCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(BatchCounter)112"
      },
      {
        "astId": 143,
        "contract": "contracts/OrderCollector.sol:OrderCollector",
        "label": "orderLimits",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 149,
        "contract": "contracts/OrderCollector.sol:OrderCollector",
        "label": "numOrders",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(BatchCounter)112": {
        "encoding": "inplace",
        "label": "contract BatchCounter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}